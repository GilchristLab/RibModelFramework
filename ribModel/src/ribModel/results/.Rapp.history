plot(log10(expressionTrace[, gene]), type = "l")
plot(log10(test.phiTrace1[, gene]), type = "l")
plot(log10(test.phiTrace0[, gene]), type = "l")
plot(log10(test.phiTrace1[, gene]), type = "l")
test.phi <- read.table("phiPosterior.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("phiPosterior.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- 1:500#
plot(log10(true.phi[idx]), log10(test.phi[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi)))#
points(log10(true.phi[-idx]), log10(test.phi[-idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(log10(true.phi), log10(test.phi))
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrCleft.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
test.phi <- read.table("phiPosterior.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("phiPosterior.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- 1:500#
plot(log10(true.phi[idx]), log10(test.phi[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi)))#
points(log10(true.phi[-idx]), log10(test.phi[-idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(log10(true.phi), log10(test.phi))
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrCleft.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
test.phi <- read.table("phiPosterior.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("phiPosterior.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- 1:500#
plot(log10(true.phi[idx]), log10(test.phi[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi)))#
points(log10(true.phi[-idx]), log10(test.phi[-idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(log10(true.phi), log10(test.phi))
expressionTrace <- read.table("expressionLevelTrace.csv", sep=",")
which(log10(test.phi) > 4)
gene <- 784
plot(log10(expressionTrace[, gene]), type = "l")
test.phiTrace0 <- read.table("phiTrace_nmix_0.csv", sep=",")
test.phiTrace1 <- read.table("phiTrace_nmix_1.csv", sep=",")
plot(log10(test.phiTrace1[, gene]), type = "l")
gene
test.phiTrace1
expressionTrace
test.phiTrace0
mixAssignment
test.phi <- read.table("phiPosterior.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("phiPosterior.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- 1:500#
plot(log10(true.phi[idx]), log10(test.phi[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi)))#
points(log10(true.phi[-idx]), log10(test.phi[-idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(log10(true.phi), log10(test.phi))
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat1.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrCleft.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
test.phi <- read.table("phiPosterior.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("phiPosterior.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- 1:500#
plot(log10(true.phi[idx]), log10(test.phi[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi)))#
points(log10(true.phi[-idx]), log10(test.phi[-idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(log10(true.phi), log10(test.phi))
expressionTrace <- read.table("expressionLevelTrace.csv", sep=",")
which(log10(test.phi) > 4)
gene <- 844
plot(log10(expressionTrace[, gene]), type = "l")
expressionTrace
test.phiTrace0
test.phiTrace1
plot(log10(test.phiTrace1[, gene]), type = "l")
plot(log10(test.phiTrace0[, gene]), type = "l")
plot(log10(test.phiTrace1[, gene]), type = "l")
plot(log10(test.phiTrace0[, gene]), type = "l")
plot(log10(test.phiTrace1[, gene]), type = "l")
plot(log10(test.phiTrace0[, gene]), type = "l")
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))
likTrace
type
plot(likTrace, type = "l")
trueCSP
gene <- 844
expressionTrace
mixAssignment
idx <- round(mixAssignment) == 1
round(mixAssignment)
test.phi <- read.table("phiPosterior.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("phiPosterior.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- 1:500#
plot(log10(true.phi[idx]), log10(test.phi[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi)))#
points(log10(true.phi[-idx]), log10(test.phi[-idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(log10(true.phi), log10(test.phi))
gene <- 844
plot(log10(expressionTrace[, gene]), type = "l")
test.phiTrace0 <- read.table("phiTrace_nmix_0.csv", sep=",")
plot(log10(test.phiTrace0[, gene]), type = "l")
test.phiTrace1 <- read.table("phiTrace_nmix_1.csv", sep=",")
range(c(test.phiTrace0, test.phiTrace1))
plot(log10(test.phiTrace0[, gene]), type = "l", col="red")
plot(log10(test.phiTrace1[, gene]), type = "l")
quartz()
plot(log10(test.phiTrace0[, gene]), type = "l", col="red")
test.phi <- read.table("phiPosterior.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("phiPosterior.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- 1:500#
plot(log10(true.phi[idx]), log10(test.phi[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi)))#
points(log10(true.phi[-idx]), log10(test.phi[-idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(log10(true.phi), log10(test.phi))
which(log10(test.phi) < 0)
plot(log10(expressionTrace[, gene]), type = "l")
test.phiTrace0 <- read.table("phiTrace_nmix_0.csv", sep=",")
test.phiTrace1 <- read.table("phiTrace_nmix_1.csv", sep=",")
range(c(test.phiTrace0, test.phiTrace1))
plot(log10(test.phiTrace1[, gene]), type = "l")
gene <- 100
plot(log10(expressionTrace[, gene]), type = "l")
test.phiTrace0 <- read.table("phiTrace_nmix_0.csv", sep=",")
test.phiTrace1 <- read.table("phiTrace_nmix_1.csv", sep=",")
range(c(test.phiTrace0, test.phiTrace1))
plot(log10(test.phiTrace1[, gene]), type = "l")
quartz()
plot(log10(test.phiTrace0[, gene]), type = "l", col="red")
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]
idx <- round(mixAssignment) == 1
mixAssignment
mixAssignment[100]
which(log10(test.phi) < 0)
gene <- 200
plot(log10(expressionTrace[, gene]), type = "l")
test.phiTrace0 <- read.table("phiTrace_nmix_0.csv", sep=",")
test.phiTrace1 <- read.table("phiTrace_nmix_1.csv", sep=",")
range(c(test.phiTrace0, test.phiTrace1))
mixAssignment
mixAssignment[200]
which(log10(test.phi) < 0)
gene <- 1
mixAssignment[1]
mixAssignment[285]
gene <- 285
plot(log10(expressionTrace[, gene]), type = "l")
test.phiTrace0 <- read.table("phiTrace_nmix_0.csv", sep=",")
test.phiTrace1 <- read.table("phiTrace_nmix_1.csv", sep=",")
range(c(test.phiTrace0, test.phiTrace1))
plot(log10(test.phiTrace1[, gene]), type = "l")
quartz()
plot(log10(test.phiTrace0[, gene]), type = "l", col="red")
gene <- 285
expressionTrace <- read.table("expressionLevelTrace.csv", sep=",")
gene <- 285
plot(log10(expressionTrace[, gene]), type = "l")
test.phiTrace0 <- read.table("phiTrace_nmix_0.csv", sep=",")
test.phiTrace1 <- read.table("phiTrace_nmix_1.csv", sep=",")
range(c(test.phiTrace0, test.phiTrace1))
plot(log10(test.phiTrace1[, gene]), type = "l")
quartz()
plot(log10(test.phiTrace0[, gene]), type = "l", col="red")
mixAssignment
mixAssignment[200]
mixAssignment[285]
mixAssignment[281]
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../SimulatedGenome_selectionShared_phi.csv", sep=",", header=T)[, 2]
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
test.phi0 <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
test.phi0 <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("mutationPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:500], type = "l")
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrCleft.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat1.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrCleft.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:500], type = "l")
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
mutation <- read.table("mutationPosterior_Cat1.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrCleft.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:500], type = "l")
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat1.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrCleft.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:500], type = "l")
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
idx <- c(rep(TRUE, times = 448), rep(FALSE, times = 457))
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
idx <- c(rep(TRUE, times = 448), rep(FALSE, times = 457))
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../simulatedAllUniqueR_phi.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../simulatedAllUniqueR_phi.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../simulatedAllUniqueR_phi.csv", sep=",", header=T)[, 2]#
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../simulatedAllUniqueR_phi.csv", sep=",", header=T)[, 2]
idx <- c(rep(TRUE, times = 500), rep(FALSE, times = 500))
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))
true.phi
test.phi1
idx <- c(rep(FALSE, times = 500), rep(TRUE, times = 500))
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]
mixAssignment
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:500], type = "l")
test.phi1
test.phi0
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]
test.phi0
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
test.phi1
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../simulatedAllUniqueR_phi.csv", sep=",", header=T)[, 2]#
idx <- c(rep(FALSE, times = 500), rep(TRUE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:500], type = "l")
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]
mixAssignment
sd(log10(true.phi))
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../simulated_CSP0.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]
mutation <- mutation[mutation != 0]
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]
selection <- selection[selection != 0]
trueCSP <- read.table("../simulated_CSP0.csv", sep=",", header=T)
trueCSP <- read.table("../simulated_CSP0.csv", sep=",", header=T)
trueCSP <- read.table("../simulated_CSP0.csv", sep=",", header=T)
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])
trueMutation <- trueCSP[dm.idx, 2]
trueSelection <- trueCSP[!dm.idx, 2]
trueMutation
dm.idx
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../simulated_CSP0.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:500], type = "l")
plot(likTrace[10:600], type = "l")
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../simulatedAllUniqueR_phi.csv", sep=",", header=T)[, 2]#
idx <- c(rep(FALSE, times = 500), rep(TRUE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:600], type = "l")
test.scuo <- read.table("scuo.csv", sep=",")[,2]#
plot(log10(true.phi), log10(test.scuo))#
cor(log10(true.phi), log10(test.scuo))
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../simulated_CSP0.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat1.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../simulated_CSP1.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]
mixAssignment
mean(likTrace[500:600])
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../simulatedAllUniqueR_phi.csv", sep=",", header=T)[, 2]#
idx <- c(rep(FALSE, times = 500), rep(TRUE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:600], type = "l")#
mean(likTrace[500:600])
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../simulatedAllUniqueR_phi.csv", sep=",", header=T)[, 2]#
idx <- c(rep(FALSE, times = 500), rep(TRUE, times = 500))
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
mutation <- read.table("mutationPosterior_Cat1.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../simulated_CSP1.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../simulated_CSP0.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]
mixAssignment
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../simulatedAllUniqueR_phi.csv", sep=",", header=T)[, 2]#
idx <- c(rep(FALSE, times = 500), rep(TRUE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../simulated_CSP0.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:600], type = "l")
mean(likTrace[500:600])
mixAssignment
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../simulatedAllUniqueR_phi.csv", sep=",", header=T)[, 2]#
idx <- c(rep(FALSE, times = 500), rep(TRUE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:600], type = "l")#
mean(likTrace[500:600])
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../simulated_CSP0.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat1.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../simulated_CSP1.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
trueCSP <- read.table("../simulated_CSP0.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]
trueCSP <- read.table("../simulated_CSP1.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation1 <- trueCSP[dm.idx, 2]#
trueSelection1 <- trueCSP[!dm.idx, 2]
plot(trueMutation, trueMutation1)
plot(trueSelection, trueSelection1)
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(FALSE, times = 500), rep(TRUE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:600], type = "l")#
mean(likTrace[500:600])
mutation <- read.table("mutationPosterior_Cat1.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
mixAssignment
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
round(mixAssignment)
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_ChrCleft_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(FALSE, times = 500), rep(TRUE, times = 500))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:600], type = "l")#
mean(likTrace[500:600])
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:1200], type = "l")#
mean(likTrace[1100:1200])
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]
mixAssignment
idx <- c(rep(FALSE, times = 448), rep(TRUE, times = 457))
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
idx <- c(rep(FALSE, times = 448), rep(TRUE, times = 457))
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
mutation <- read.table("mutationPosterior_Cat1.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat1.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrCleft.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:1200], type = "l")#
mean(likTrace[1100:1200])
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat1.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(FALSE, times = 448), rep(TRUE, times = 457))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(FALSE, times = 448), rep(TRUE, times = 457))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
mutation <- read.table("mutationPosterior_Cat0.csv", sep=",")[,2]#
mutation <- mutation[mutation != 0]#
selection <- read.table("selectionPosterior_Cat0.csv", sep=",")[,2]#
selection <- selection[selection != 0]#
trueCSP <- read.table("../Skluyveri_CSP_ChrA.csv", sep=",", header=T)#
dm.idx <- grepl(pattern = "^[A-Z].[ACGT]{3}.log", x = trueCSP[,1])#
trueMutation <- trueCSP[dm.idx, 2]#
trueSelection <- trueCSP[!dm.idx, 2]#
#
plot(trueMutation, mutation, xlab = "TRUE VALUES", ylab = "ESTM. VALUES", xlim = range(c(trueMutation, trueSelection)), #
     ylim = range(c(mutation, selection)) )#
points(trueSelection, selection, col="red")#
abline(0, 1, col="blue", lwd=2)#
cor(trueMutation, mutation)#
cor(trueSelection, selection)
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:600], type = "l")
test.phi0 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi1 <- read.table("expressionPosterior_Cat0.csv", sep=",")[,2]#
test.phi.names <- as.character(read.table("expressionPosterior_Cat0.csv", sep=",")[,1])#
true.phi <- read.table("../Skluyveri_ChrA_phi_est.csv", sep=",", header=T)[, 2]#
idx <- c(rep(FALSE, times = 448), rep(TRUE, times = 457))#
mixAssignment <- read.table("mixAssignment.csv", sep=",")[,2]#
idx <- round(mixAssignment) == 1#
#
plot(log10(true.phi[idx]), log10(test.phi1[idx]), xlim = range(log10(true.phi)), ylim = range(log10(test.phi1), na.rm = T))#
points(log10(true.phi[!idx]), log10(test.phi0[!idx]), col = "red")#
legend("topleft", legend = c("Category 0", "Category 1"), col = c("black", "red"), pch = c(1,1))#
abline(0,1, col="blue", lwd=2)#
cor(c(log10(true.phi[!idx]), log10(true.phi[idx])), c(log10(test.phi0[!idx]), log10(test.phi1[idx])))
likTrace <- unlist(c(read.table("liklihoodTrace.csv", sep=",")))#
plot(likTrace[10:1200], type = "l")#
mean(likTrace[1100:1200])
